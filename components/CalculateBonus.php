<?php


namespace app\components;


use app\components\interfaces\IBonus;
use app\components\interfaces\ICalculateBonus;
use app\components\interfaces\IEmployee;
use app\components\interfaces\IHandleCalculate;
use app\models\Bonus;
use yii\base\Component;

/**
 * Class CalculateBonus
 * Calculate bonus
 * @package app\components
 */
class CalculateBonus extends Component implements ICalculateBonus
{
    /**
     * @var IBonus[]
     */
    private $bonuses = [];
    /**
     * @var IHandleCalculate
     */
    private $handle;

    /**
     * CalculateBonus constructor.
     * @param IHandleCalculate $handle - Dependency Injection
     * @param array $config
     */
    public function __construct(IHandleCalculate $handle, array $config = [])
    {
        $this->handle = $handle;
        parent::__construct($config);
    }

    public function init()
    {
        $this->setBonuses();
        parent::init(); // TODO: Change the autogenerated stub
    }

    public function calcCount()
    {

    }

    /**
     * @param IEmployee $employee
     * @return mixed
     * @throws \yii\base\ErrorException
     */
    public function calculate(IEmployee $employee = null, $countCall = null)
    {
        if (!is_null($employee)) {
            $countCall = $employee->sumCall();
        }
        foreach ($this->bonuses as $bonus) {
            /** @var Bonus $bonus */
            if ($bonus->support($countCall)) {
                /** @var Count call employee $countCall */
                return $this->handle
                    ->setCount($countCall)
                    ->calculate($bonus);
            }
        }
    }

    /**
     * Set bonuses
     * TODO: Cache
     */
    public function setBonuses()
    {
        if (!$this->bonuses) {
            $this->bonuses = Bonus::getAll('count DESC');
        }
    }

    /**
     * @return array
     */
    public function getBonuses()
    {
        return $this->bonuses;
    }

    /**
     * @param ICalculateBonus $caclulate
     * @return $this
     */
    public function setProvider(ICalculateBonus $caclulate)
    {
        $this->calculate = $caclulate;

        return $this;
    }
}